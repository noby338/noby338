import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as i,b as a,d as t,a as s,e,r as o}from"./app.759ff6f5.js";const r={},c=e('<h2 id="计算机及-java-知识" tabindex="-1"><a class="header-anchor" href="#计算机及-java-知识" aria-hidden="true">#</a> 计算机及 java 知识</h2><h3 id="计算机基础" tabindex="-1"><a class="header-anchor" href="#计算机基础" aria-hidden="true">#</a> 计算机基础</h3><ul><li>dos 和 cmd 的区别：windows 里面运行 CMD 出来的 DOS 不是真正的 DOS，那是微软在 windows 里虚拟的 DOS 环境，用来运行一些高级命令的，真正的 DOS 是脱离系统的。因为他本身就是一种操作系统。</li><li>cmd（命令提示符）中给出路径和程序名即可运行该程序（可省略。exe）</li><li>win10 环境变量作用：给出某一第三方程序的路径，使之运行该程序时可省略路径的输入 用户变量：在该用户生效 系统变量：全局生效</li><li>环境变量中的%SystemRoot%等价于系统安装盘:\\windows</li><li>两种创建环境变量方法 <ul><li>直接在系统变量的 path 中输入路径</li><li>先在系统变量中创建 JAVA_HOME 路径 D:\\Java\\jdk-9.0.4，再在 path 中嵌套%JAVA_HOME%/bin</li></ul></li></ul><h3 id="jdk-版本分类" tabindex="-1"><a class="header-anchor" href="#jdk-版本分类" aria-hidden="true">#</a> JDK 版本分类</h3><ul><li>JAVASE(Java Standard Edition)：java 标准版</li><li>JAVAEE(Java Enterprise Edition)：应用于桌面环境、企业版 J2EE，是网站开发方向的。</li><li>JAVAME(Java Micro Edition)：应用于移动、无线及有限资源的环境</li></ul><h3 id="jvm、jre、jdk" tabindex="-1"><a class="header-anchor" href="#jvm、jre、jdk" aria-hidden="true">#</a> JVM、JRE、JDK</h3><ul><li>JDK (Java Development Kit) 是太阳微系统针对 Java 开发人员发布的免费软件开发工具包（SDK，Software development kit）。自从 Java 推出以来，JDK 已经成为使用最广泛的 Java SDK。(JDK=JVM+Java 核心类库+Java 编译器等其他开发工具)</li><li>JRE (Java Runtime Environment) ，java 运行环境，普通用户并不需要安装 JDK 来运行 Java 程序，而只需要安装 JRE。而程序开发者必须安装 JDK 来编译、调试程序。(JRE=JVM+Java 核心类库)</li><li>JVM (Java virtual machine) 意为 Java 虚拟机，主要负责运行 Java 程序，不管什么操作系统，只要安装了 Java 虚拟机就可以运行 Java 程序，这也就是为什么 Java 跨平台的原因。</li></ul><h3 id="程序的运行过程" tabindex="-1"><a class="header-anchor" href="#程序的运行过程" aria-hidden="true">#</a> 程序的运行过程</h3><ol><li>JDK 中的 java 编译器编译生成字节码文件</li><li>不同平台的 JVM 解析字节码文件生成机器码</li><li>运行机器码</li></ol><h3 id="java-语言的版本" tabindex="-1"><a class="header-anchor" href="#java-语言的版本" aria-hidden="true">#</a> java 语言的版本</h3><ul><li>java8(主流)：JDK8 或者 JDK1.8 是由于自从 JDK1.5/JDK5 命名方式改变后遗留的新旧命令方式问题。所以 JJava8、JDK8、JDK1.8 都是同一个东西。</li><li>java17(最新)</li><li>从 JDK 5.0 开始 J2EE 改名为 java EE，J2SE 改名为 java SE</li><li>从 JDK1.2 开始改名为 java2(J2) <img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/20200407153336875.png" alt="20200407153336875"></li></ul><h2 id="jdk-和-jre-的安装" tabindex="-1"><a class="header-anchor" href="#jdk-和-jre-的安装" aria-hidden="true">#</a> JDK 和 JRE 的安装</h2><h3 id="前置准备" tabindex="-1"><a class="header-anchor" href="#前置准备" aria-hidden="true">#</a> 前置准备</h3>',13),p=a("li",null,"在 D 盘下创建文件夹，取名为 java，并在 java 文件夹下创建两个文件夹，分别取名为 jdk 和 jre",-1),u={href:"https://www.oracle.com/java/technologies/downloads/archive/",target:"_blank",rel:"noopener noreferrer"},m=e(`<h3 id="jdk-的安装" tabindex="-1"><a class="header-anchor" href="#jdk-的安装" aria-hidden="true">#</a> JDK 的安装</h3><ol><li>点击 java 开发工具安装包</li><li>点击”下一步“</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182659243.png" alt="image-20221220182659243"></p><ol start="3"><li>点击“更改”，修改安装到 D:\\java\\jdk 文件夹</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182725069.png" alt="image-20221220182725069"></p><ol start="4"><li>点击“下一步”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182740205.png" alt="image-20221220182740205"></p><ol start="5"><li>等待安装完成</li></ol><h3 id="jre-的安装" tabindex="-1"><a class="header-anchor" href="#jre-的安装" aria-hidden="true">#</a> JRE 的安装</h3><ol><li>点击“更改”，将 JRE 安装的到 D:\\java\\jre</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182807748.png" alt="image-20221220182807748"></p><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182825725.png" alt="image-20221220182825725"></p><ol start="2"><li>点击“关闭”安装完成</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182839060.png" alt="image-20221220182839060"></p><h3 id="jdk-环境配置" tabindex="-1"><a class="header-anchor" href="#jdk-环境配置" aria-hidden="true">#</a> JDK 环境配置</h3><ol><li>在计算机/电脑图标上右键-&gt;属性，打开计算机属性</li><li>选择“高级系统设置”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182905793.png" alt="image-20221220182905793"></p><ol start="3"><li>选择“环境变量”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182919601.png" alt="image-20221220182919601"></p><ol start="4"><li>选择系统环境变量下的 “新建”</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220182930798.png" alt="image-20221220182930798"></p><ol start="5"><li>指定变量名为：JAVA_HOME 变量值为 jdk 的安装目录，然后点击确定</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183001457.png" alt="image-20221220183001457"></p><ol start="6"><li>再新建一个环境变量，变量名为：CLASSPATH 值为：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar;<strong>注意：最前面有个点</strong></li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183107808.png" alt="image-20221220183107808"></p><ol start="7"><li><p>点击确定保存</p></li><li><p>在系统环境变量中找到 path，双击</p></li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183116294.png" alt="image-20221220183116294"></p><ol start="9"><li>点击“新建”，增加以下两个值 <ol><li><code>%JAVA_HOME%\\jre\\bin</code></li><li><code>%JAVA_HOME%\\bin</code></li></ol></li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183129618.png" alt="image-20221220183129618"></p><p><strong>注：如果是 win7 操作系统，在原变量值的最后面加上 ;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin 然后一路确定，配置完毕</strong></p><ol start="10"><li>打开 DOS 窗口输入 java -version 指令，看到以下内容表示 JDK 完全安装成功</li></ol><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221220183257185.png" alt="image-20221220183257185"></p><h2 id="dos-命令运行-java-程序" tabindex="-1"><a class="header-anchor" href="#dos-命令运行-java-程序" aria-hidden="true">#</a> dos 命令运行 java 程序</h2><ol><li>编译： <ul><li>javac Hello.java(生成 Hello.class 字节码文件)</li></ul></li><li>运行： <ul><li>java Hello (运行 Hello.class 字节码文件)</li></ul></li></ol><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><ul><li>定义</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//基本数据类型</span>
 <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//引用数据类型</span>
 <span class="token comment">//相比较声明，定义会建立储存空间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>声明</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token class-name">String</span> str<span class="token punctuation">;</span><span class="token comment">//声明的特点是该变量str并没有引用，系统会给他一个默认的引用：null</span>
  <span class="token comment">//相比较定义，声明不会建立储存空间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>引用</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对象中“=”的过程就是引用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//new的动作即为创建</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>赋值</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  num <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">//基本数据类型中“=”的过程就是赋值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>初始化</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">1</span>；<span class="token comment">//第一次赋值或者第一次引用即为初始化</span>
  <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>变量的分类：</p><ul><li>依据数据类型 <ul><li><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220119105644986.png" alt="image-20220119105644986"></li></ul></li><li>依据声明的位置 <ul><li><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220119105433881.png" alt="image-20220119105433881"></li></ul></li></ul></li></ul><h2 id="标识符" tabindex="-1"><a class="header-anchor" href="#标识符" aria-hidden="true">#</a> 标识符</h2><ul><li><p>定义：标识符是用来唯一标识包、类、方法、对象、变量、文件名的字符串；</p></li><li><p>标识符命名规则：</p><ul><li>标识符可以包含数字、字母、$、_，但是不能以数字开头；</li><li>关键字和保留字不能用作标识符；</li><li>标识符是大小写敏感的；</li></ul></li><li><p>命名规范</p><ul><li><p>大驼峰命名法：多单词组成的标识符，所有单词的首字母大写</p><ul><li>例如：MyName</li><li>常用于类名</li></ul></li><li><p>小驼峰命名法：多单词组成的标识符，首单词的首字母小写，其他单词首字母大写</p><ul><li>例如：myNamue</li><li>常用于变量名，方法名。</li></ul></li><li><p>下划线命名法：多单词组成的标识符，所有单词之间用下划线分割</p><ul><li>例如：my_name</li></ul></li></ul></li></ul><h2 id="基本数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型" aria-hidden="true">#</a> 基本数据类型</h2><ul><li>四类八种</li></ul><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220210101701647.png" alt="image-20220210101701647"></p><p>注意：long 数据类型后跟 l，float 数据类型后跟字母 f(可大写和小写)</p><h2 id="引用数据类型" tabindex="-1"><a class="header-anchor" href="#引用数据类型" aria-hidden="true">#</a> 引用数据类型</h2><ul><li>类 class</li><li>接口 interface</li><li>数组 array</li></ul><h2 id="java-关键字-keyword" tabindex="-1"><a class="header-anchor" href="#java-关键字-keyword" aria-hidden="true">#</a> java 关键字（keyword）</h2><ul><li>关键字定义：Java 的关键字对 java 的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等。</li><li>保留字（reserved word）：保留字是为 java 预留的关键字，他们虽然现在没有作为关键字，但在以后的升级版本中有可能作为关键字。</li></ul><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left;">访问控制</td><td style="text-align:left;">private</td><td>protected</td><td>public</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left;">类，方法和变量修饰符</td><td style="text-align:left;">abstract</td><td>class</td><td>extends</td><td>final</td><td>implements</td><td>interface</td><td>native</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">new</td><td>static</td><td>strictfp</td><td>synchronized</td><td>transient</td><td>volatile</td><td></td></tr><tr><td style="text-align:left;">程序控制</td><td style="text-align:left;">break</td><td>continue</td><td>return</td><td>do</td><td>while</td><td>if</td><td>else</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">for</td><td>instanceof</td><td>switch</td><td>case</td><td>default</td><td></td><td></td></tr><tr><td style="text-align:left;">错误处理</td><td style="text-align:left;">try</td><td>catch</td><td>throw</td><td>throws</td><td>finally</td><td></td><td></td></tr><tr><td style="text-align:left;">包相关</td><td style="text-align:left;">import</td><td>package</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left;">基本类型</td><td style="text-align:left;">boolean</td><td>byte</td><td>char</td><td>double</td><td>float</td><td>int</td><td>long</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">short</td><td>null</td><td>true</td><td>false</td><td></td><td></td><td></td></tr><tr><td style="text-align:left;">变量引用</td><td style="text-align:left;">super</td><td>this</td><td>void</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left;">保留字</td><td style="text-align:left;">goto</td><td>const</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>`,59);function h(g,v){const l=o("ExternalLinkIcon");return d(),i("div",null,[c,a("ol",null,[p,a("li",null,[t("下载 windows 对应的 java8 开发工具安装包 "),a("a",u,[t("java 官网"),s(l)])])]),m])}const y=n(r,[["render",h],["__file","day01 计算机及java基础知识、java环境变量的配置.html.vue"]]);export{y as default};
