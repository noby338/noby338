import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.759ff6f5.js";const p={},e=t(`<h2 id="网络编程" tabindex="-1"><a class="header-anchor" href="#网络编程" aria-hidden="true">#</a> 网络编程</h2><ul><li>网络通讯三要素 <ul><li>IP地址：计算机的唯一标识，它是通过本地网络和本计算机综合计算得到的 <ul><li>PIV4:互联网通信协议版本4（英语：<strong>I</strong>nternet <strong>P</strong>rotocol <strong>v</strong>ersion <strong>4</strong>，IPv4） <ul><li>32位二进制输入(10010001. 10010001. 10010001. 10010001 )</li><li>点分十进制：(100.4.5.6)</li></ul></li><li>PIV6: <ul><li>128位(10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001. 10010001)</li><li>冒分十六进制((ABCD:EF01:2345:6789:ABCD:EF01:2345:6789)</li></ul></li><li>查询:ipconfig 和 ipconfig -all</li></ul></li><li>端口号 <ul><li>应用程序的唯一标识</li><li>0-65535(0-1024，部分默认应用的端口号，自定义端口号应使用1024后的端口号)</li><li>但两个端口号相同的应用打开时，后打开的应用将无法使用 <ul><li>解决方案 <ul><li>换端口号</li><li>关闭之前应用端口 <ul><li>PID(进程ID)</li><li>netstat -ano</li></ul></li></ul></li></ul></li></ul></li><li>协议(protocol) <ul><li>通信约定(网络通信协议)</li><li>体现在数据包的格式上</li></ul></li></ul></li></ul><ul><li>OSI网络七层模型：OSI是Open System Interconnection的缩写，意为开放式系统互联。国际标准化组织（ISO）制定了OSI模型，该模型定义了不同计算机互联的标准，是设计和描述计算机网络通信的基本框架。OSI模型把网络通信的工作分为7层，分别是物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。<img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220224234202210.png" alt="image-20220224234202210"></li></ul><h3 id="inetaddress" tabindex="-1"><a class="header-anchor" href="#inetaddress" aria-hidden="true">#</a> InetAddress</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">note</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetAddress</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">UnknownHostException</span></span><span class="token punctuation">;</span>  
  
<span class="token doc-comment comment">/**  
 * @Description IP地址、域名的使用  
 * @Author Noby  
 * @Date 2023/3/19 13:50  
 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InetAddressNote</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>  
        <span class="token class-name">InetAddress</span> localHost <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取本机地址  </span>
        <span class="token class-name">InetAddress</span> myComputer <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&quot;LAPTOP-7JVG6UKI&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据主机名获取地址  </span>
        <span class="token class-name">InetAddress</span> baiduDomain <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&quot;www.baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据域名获取地址  </span>
        <span class="token class-name">InetAddress</span> baiduIP <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">&quot;163.177.151.110&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据ip获取地址  </span>
  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;localHost = &quot;</span> <span class="token operator">+</span> localHost<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;myComputer = &quot;</span> <span class="token operator">+</span> myComputer<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;baiduDomain = &quot;</span> <span class="token operator">+</span> baiduDomain<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;baiduIP = &quot;</span> <span class="token operator">+</span> baiduIP<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="udp协议" tabindex="-1"><a class="header-anchor" href="#udp协议" aria-hidden="true">#</a> UDP协议</h3><ul><li>UDP（User Datagram Protocol）协议是一种传输层协议，它提供了一种无连接、不可靠的数据传输服务。在网络通信中，UDP协议主要用于实时传输数据，例如音频、视频等。</li><li>与TCP协议不同，UDP协议不需要在客户端和服务器之间建立连接，也不保证数据传输的可靠性。它只是简单地将数据包发送到目标地址，不进行确认、重传等操作。因此，UDP协议的传输速度比TCP协议快，但同时也存在丢包、乱序等问题。</li><li>UDP协议的应用场景主要包括在线游戏、流媒体等需要实时传输数据的场景。由于不需要建立连接，UDP协议的开销比TCP协议小，因此对于一些带宽较小的场景，UDP协议也可以提供更好的传输性能。但需要注意的是，在使用UDP协议时需要自行处理数据的可靠性和安全性问题。</li><li>广播地址：在局域网中有一个地址，如果将消息发送到该地址，那么局域网内所有的设备都能收到，(默认为xxx.xxx.xxx.255)</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">note</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>  
  
<span class="token doc-comment comment">/**  
 * @Description UDP数据报协议,发送端  
 * @Author Noby  
 * @Date 2023/3/19 13:55  
 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UDPSendNote</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>  
        <span class="token class-name">String</span> info <span class="token operator">=</span> <span class="token string">&quot;How are you?中文&quot;</span><span class="token punctuation">;</span>  
        <span class="token comment">//1、创建套接字  </span>
        <span class="token class-name">DatagramSocket</span> datagramSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//DatagramSocket实现UDP协议  </span>
        <span class="token comment">//2、获取数据报  </span>
        <span class="token class-name">DatagramPacket</span> datagramPacket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>info<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">11111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//3、发送数据  </span>
        datagramSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>datagramPacket<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//4、关闭套接字  </span>
        datagramSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">note</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">DatagramPacket</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">DatagramSocket</span></span><span class="token punctuation">;</span>  
  
<span class="token doc-comment comment">/**  
 * @Description UDP数据报协议,接收端  
 * @Author Noby  
 * @Date 2023/3/19 13:56  
 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UDPReceiveNote</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>  
        <span class="token comment">//1、创建套接字  </span>
        <span class="token class-name">DatagramSocket</span> datagramSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token number">11111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//2、创建数据报  </span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
        <span class="token class-name">DatagramPacket</span> datagramPacket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span>bytes<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//3、获取数据  </span>
        datagramSocket<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>datagramPacket<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//receive方法：阻塞方法，没接收到任何数据时就等待消息，程序暂停执行  </span>
        <span class="token comment">//4、关闭套接字  </span>
        datagramSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>datagramPacket<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//datagramPacket.getLength() 获取接收到数据的长度  </span>
  
<span class="token comment">//        while(true) {  </span>
<span class="token comment">//            datagramSocket.receive(datagramPacket);//receive方法：阻塞方法，没接收到任何数据时就等待消息，程序暂停执行  </span>
<span class="token comment">//  </span>
<span class="token comment">//            System.out.println(new String(bytes,0,datagramPacket.getLength()));//datagramPacket.getLength() 获取接收到数据的长度  </span>
<span class="token comment">//  </span>
<span class="token comment">//        }  </span>
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tcp协议" tabindex="-1"><a class="header-anchor" href="#tcp协议" aria-hidden="true">#</a> TCP协议</h3><ul><li>TCP（Transmission Control Protocol）协议是一种传输层协议，它提供了可靠的、面向连接的数据传输服务。在网络通信中，TCP协议通常用于传输HTTP协议中的数据。具体来说，HTTP协议使用TCP协议的连接服务，通过TCP协议在客户端和服务器之间建立连接，然后在连接上进行数据传输。</li><li>HTTP（Hypertext Transfer Protocol）协议是一种应用层协议，它定义了客户端和服务器之间进行通信的规则。它主要用于Web应用程序中，包括网页浏览、文件下载、在线视频等。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">note</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetAddress</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Socket</span></span><span class="token punctuation">;</span>  
<span class="token doc-comment comment">/**  
 * @Description TCP数据报协议,发送端  
 * @Author Noby  
 * @Date 2023/3/19 13:56  
 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TCPSendNote</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>  
        <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">11111</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Socket底层实现了TCP协议  </span>
        <span class="token class-name">String</span> info <span class="token operator">=</span> <span class="token string">&quot;TCPInfo中文&quot;</span><span class="token punctuation">;</span>  
        <span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">note</span><span class="token punctuation">;</span>  
  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ServerSocket</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Socket</span></span><span class="token punctuation">;</span>  
<span class="token doc-comment comment">/**  
 * @Description TCP数据报协议,接收端  
 * @Author Noby  
 * @Date 2023/3/19 13:56  
 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TCPReceiveNote</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>  
        <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">11111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Socket</span> socket <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">int</span> len <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        serverSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="udp与tcp的区别" tabindex="-1"><a class="header-anchor" href="#udp与tcp的区别" aria-hidden="true">#</a> UDP与TCP的区别</h3><ul><li>UDP无连接协议(源端和终端不建立连接)、TCP有连接(源端和终端建立连接) <ul><li>UDP发送数据时不需要建立连接，直接将数据发送到网络上就行，不考虑接收方是否能接受消息</li><li>TCP必须建立连接，否则无法发送数据，通过三次握手建立连接</li></ul></li><li>UDP不可靠、TCP可靠。UDP不安全、TCP安全 <ul><li>UDP只管发，接收方是否能收到无所谓，可能会造成数据丢失问题</li><li>TCP发送完数据之后需要等待服务端确认，如果没收到确认信息会重复发送数据，收到之后会继续发送下一个数据</li></ul></li><li>UDP传输效率高，TCP相对较低 <ul><li>UDP只管发不需要等待接收端返回确认消息，而TCP每次发送数据之后都需要等待服务端返回确认消息</li></ul></li><li>UDP、TCP的使用场景 <ul><li>UDP：通知、广播</li><li>TCP：实时数据传输、web项目（http协议基于tcp实现的）</li></ul></li></ul><h3 id="tcp协议的三次招手-四次挥手" tabindex="-1"><a class="header-anchor" href="#tcp协议的三次招手-四次挥手" aria-hidden="true">#</a> TCP协议的三次招手，四次挥手</h3><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220224234607226.png" alt="image-20220224234607226" style="zoom:67%;"><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220224234837656.png" alt="image-20220224234837656"></p>`,18),c=[e];function o(l,i){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","day21 网络编程.html.vue"]]);export{r as default};
