import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,b as n,d as s,a as l,e as a,r}from"./app.759ff6f5.js";const o={},c=a(`<h2 id="springboot-介绍" tabindex="-1"><a class="header-anchor" href="#springboot-介绍" aria-hidden="true">#</a> SpringBoot 介绍</h2><ul><li>SpringBoot 概念 <ul><li>SpringBoot 提供了一种快速使用 Spring 的方式，基于约定优于配置的思想，可以让开发人员不必在配置与逻辑业务之间进行思维的切换，全身心的投入到逻辑业务的代码编写中，从而大大提高了开发的效率，Spring Boot 并不是对 Spring 功能上的增强，而是提供了一种快速使用 Spring 的方式。</li></ul></li><li>Spring 缺点 <ul><li>配置繁琐 <ul><li>虽然 Spring 的组件代码是轻量级的，但它的配置却是重量级的。一开始，Spring 用 XML 配置，而且是很多 XML 配置。Spring 2.5 引入了基于注解的组件扫描，这消除了大量针对应用程序自身组件的显式 XML 配置。 Spring 3.0 引入了基于 Java 的配置，这是一种类型安全的可重构配置方式，可以代替 XML。 所有这些配置都代表了开发时的损耗。因为在思考 Spring 特性配置和解决业务问题之间需要进行思维切换，所以编写配置挤占了编写应用程序逻辑的时间。和所有框架一样，Spring 实用，但它要求的回报也不少。</li></ul></li><li>依赖繁琐 <ul><li>项目的依赖管理也是一件耗时耗力的事情。在环境搭建时，需要分析要导入哪些库的坐标，而且还需要分析导入与之有依赖关系的其他库的坐标，一旦选错了依赖的版本，随之而来的不兼容问题就会严重阻碍项目的开发进度。</li></ul></li></ul></li><li>SpringBoot 功能 <ul><li>自动配置 <ul><li>Spring Boot 的自动配置是一个运行时（更准确地说，是应用程序启动时）的过程，考虑了众多因素，才决定 Spring 配置应该用哪个，不该用哪个。该过程是 SpringBoot 自动完成的。</li></ul></li><li>起步依赖 <ul><li>起步依赖本质上是一个 Maven 项目对象模型（Project Object Model，POM），定义了对其他库的传递依赖 ，这些东西加在一起即支持某项功能。 简单的说，起步依赖就是将具备某种功能的坐标打包到一起，并提供一些默认的功能。</li></ul></li><li>辅助功能 <ul><li>提供了一些大型项目中常见的非功能性特性，如嵌入式服务器、安全、指标，健康检测、外部配置等。</li></ul></li></ul></li><li>SpringBoot 的启动依赖 <ul><li>在 spring-boot-starter-parent 中定义了各种技术的版本信息，组合了一套最优搭配的技术版本。</li><li>在各种 starter 中，定义了完成该功能需要的坐标合集，其中大部分版本信息来自于父工程。</li><li>我们的工程继承 parent，引入 starter 后，通过依赖传递，就可以简单方便获得需要的 jar 包，并且不会存在 版本冲突等问题。</li></ul></li><li>SpringBoot 的配置文件：默认配置文件名称为 application <ul><li>分类 <ul><li>properteis</li><li>yml/yaml <ul><li>特点： <ul><li>大小写敏感</li><li>数据值前边必须有空格，作为分隔符</li><li>使用缩进表示层级关系</li><li>缩进时不允许使用 Tab 键，只允许使用空格（各个系统 Tab 对应的 空格数目可能不同，导致层次混乱）(idea 等高级编辑器可忽略)。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li><li><code>#</code>表示注释，从这个字符一直到行尾，都会被解析器忽略。</li></ul></li><li>书写格式： <ul><li>缩进写法</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 对象</span>
<span class="token key atrule">person</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> noby
<span class="token comment"># 数组</span>
<span class="token key atrule">addresss</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> beijing
  <span class="token punctuation">-</span> shanghai
<span class="token comment"># 纯量(常量)</span>
<span class="token key atrule">msg1</span><span class="token punctuation">:</span> <span class="token string">&#39;hello \\n world&#39;</span> <span class="token comment"># 单引忽略转义字符</span>
<span class="token key atrule">msg2</span><span class="token punctuation">:</span> <span class="token string">&quot;hello \\n world&quot;</span> <span class="token comment"># 双引识别转义字符</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>行内写法</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 对象</span>
<span class="token key atrule">person</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">name</span><span class="token punctuation">:</span> noby<span class="token punctuation">}</span>
<span class="token comment"># 数组</span>
<span class="token key atrule">addresss</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>beijing<span class="token punctuation">,</span>shanghai<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li><li>在同一级目录下优先级为： <ul><li>properties &gt; yml &gt; yaml</li></ul></li></ul></li></ul><h2 id="内容" tabindex="-1"><a class="header-anchor" href="#内容" aria-hidden="true">#</a> 内容</h2>`,3),u=n("li",null,"添加 module",-1),d={href:"https://start.spring.io",target:"_blank",rel:"noopener noreferrer"},m={href:"https://start.aliyun.com",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,"选择 java 8，打包方式为 jar",-1),k=n("li",null,"使用的 springboot 的版本 2.3.12.RELEASE(新建后 pom 中修改)",-1),b=n("li",null,"选择的依赖为 Spring Web",-1),g=n("li",null,"服务器运行的类必须在 SpringbootApplication 所在的包，或其子包",-1),y=a("<li>SpringBoot的启动依赖 <ul><li>在spring-boot-starter-parent中定义了各种技术的版本信息，组合了一套最优搭配的技术版本。</li><li>在各种starter中，定义了完成该功能需要的坐标合集，其中大部分版本信息来自于父工程。</li><li>我们的工程继承parent，引入starter后，通过依赖传递，就可以简单方便获得需要的jar包，并且不会存在版本冲突等问题。</li></ul></li><li>使用SpringBoot的两种方式： <ul><li>继承parent：相当于继承自spring-boot-starter-parent</li><li>使用import标签：这就相当于将spring-boot-dependencies中定义的所有<code>&lt;dependencies&gt;</code>全部复制粘贴到了本项目的pom.xml中</li></ul></li><li>SpringBoot的配置文件：默认配置文件名称为application <ul><li>分类 <ul><li>properties</li><li>yml/yaml(不建议使用yaml) <ul><li>特点： <ul><li>大小写敏感</li><li>数据值前边必须有空格，作为分隔符</li><li>使用缩进表示层级关系</li><li>缩进时不允许使用Tab键，只允许使用空格（各个系统 Tab对应的 空格数目可能不同，导致层次混乱）(idea等高级编辑器可忽略)。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li><li><code>#</code>表示注释，从这个字符一直到行尾，都会被解析器忽略。</li></ul></li></ul></li></ul></li><li>在同一级目录下优先级为： <ul><li>properties &gt; yml &gt; yaml</li></ul></li></ul></li><li>Profile <ul><li>profile是用来完成不同环境下，配置动态切换功能的。</li><li>profile配置方式 <ul><li>多profile文件方式：提供多个配置文件，每个代表一种环境。 <ul><li>application-dev.properties/yml 开发环境</li><li>application-test.properties/yml 测试环境</li><li>application-pro.properties/yml 生产环境</li></ul></li><li>yml多文档方式： <ul><li>在yml中使用 --- 分隔不同配置</li></ul></li></ul></li><li>profile激活方式 <ul><li>配置文件：在配置文件中配置：spring.profiles.active=dev</li><li>虚拟机参数：在VM options 指定：-Dspring.profiles.active=dev</li><li>命令行参数：java –jar xxx.jar --spring.profiles.active=dev</li></ul></li></ul></li><li>测试类的使用 <ul><li>添加依赖</li><li>测试类添加注解 <ul><li>@RunWith(SpringRunner.class)</li><li>@SpringBootTest(启动类.class)</li></ul></li></ul></li>",5),h=a(`<h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><ul><li>优先级:properties&gt;yml&gt;yaml</li></ul><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> properties</h3><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8081  </span>
<span class="token key attr-name">info</span><span class="token punctuation">:</span> <span class="token value attr-value">properties配置生效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="yaml" tabindex="-1"><a class="header-anchor" href="#yaml" aria-hidden="true">#</a> yaml</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8083</span>  
<span class="token key atrule">info</span><span class="token punctuation">:</span> yaml配置生效
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="yml" tabindex="-1"><a class="header-anchor" href="#yml" aria-hidden="true">#</a> yml</h3><h4 id="单文件" tabindex="-1"><a class="header-anchor" href="#单文件" aria-hidden="true">#</a> 单文件</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8082</span>  
<span class="token key atrule">info</span><span class="token punctuation">:</span> yml配置生效
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="单文件多文档" tabindex="-1"><a class="header-anchor" href="#单文件多文档" aria-hidden="true">#</a> 单文件多文档</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>  
<span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>  
<span class="token key atrule">spring</span><span class="token punctuation">:</span>  
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span> dev  
<span class="token key atrule">info</span><span class="token punctuation">:</span> 单文件(多文档)profile配置方式，dev环境  
<span class="token punctuation">---</span>  
<span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>  
<span class="token key atrule">spring</span><span class="token punctuation">:</span>  
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span> test  
<span class="token key atrule">info</span><span class="token punctuation">:</span> 单文件(多文档)profile配置方式，test环境  
<span class="token punctuation">---</span>  
<span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>  
<span class="token key atrule">spring</span><span class="token punctuation">:</span>  
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span> pro  
<span class="token key atrule">info</span><span class="token punctuation">:</span> 单文件(多文档)profile配置方式，pro环境  
<span class="token punctuation">---</span>  
<span class="token comment"># 配置文件激活方式  </span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>  
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>  
    <span class="token key atrule">active</span><span class="token punctuation">:</span> test  
<span class="token comment"># VM options 配置方式，虚拟机配置优先级高于配置文件激活方式  </span>
<span class="token comment"># -Dspring.profiles.active=dev  </span>
<span class="token comment"># Program arguments 配置方式，命令行配置优先级高于配置文件激活方式  </span>
<span class="token comment"># --spring.profiles.active=pro</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="多文件配置" tabindex="-1"><a class="header-anchor" href="#多文件配置" aria-hidden="true">#</a> 多文件配置</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 指定使用的配置环境  </span>
<span class="token comment"># 配置文件激活方式  </span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>  
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>  
    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>  
<span class="token key atrule">info</span><span class="token punctuation">:</span> 多文件profile配置方式，dev环境
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8083</span>  
<span class="token key atrule">info</span><span class="token punctuation">:</span> 多文件profile配置方式，pro环境
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>  
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8082</span>  
<span class="token key atrule">info</span><span class="token punctuation">:</span> 多文件profile配置方式，test环境
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function f(_,S){const e=r("ExternalLinkIcon");return t(),p("div",null,[c,n("ul",null,[n("li",null,[s("springboot 项目的构建过程 "),n("ul",null,[u,n("li",null,[s("选择 Spring Initializr "),n("ul",null,[n("li",null,[s("SpringBoot 项目导入的模板网址： "),n("ul",null,[n("li",null,[n("a",d,[s("https://start.spring.io"),l(e)])]),n("li",null,[n("a",m,[s("https://start.aliyun.com"),l(e)]),s("(推荐)")])])]),v,k,b])]),g])]),y]),h])}const j=i(o,[["render",f],["__file","day14 SpringBoot基本使用.html.vue"]]);export{j as default};
