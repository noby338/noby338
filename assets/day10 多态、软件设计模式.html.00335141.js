const e=JSON.parse('{"key":"v-4ab86118","path":"/codenotes/javase/day10%20%E5%A4%9A%E6%80%81%E3%80%81%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","title":"day10 多态、软件设计模式","lang":"zh-CN","frontmatter":{"title":"day10 多态、软件设计模式","icon":"write","category":["JavaSE"],"tag":["JavaSE"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"多态 理解：同一事物在不同情况下针对同一行为做出的不同反应，它是指在父类中定义的属性和方法被子类继承之后，可以表现出不同的行为，这使得同一个属性或方法在父类及其各个子类中具有不同的含义。; 多态的条件：; 有继承关系。; 有方法的重写。 ; 有父类引用指向子类对象。; 多态实现高内聚低耦合; 高内聚：各个模块功能可以在不依赖其他模块的代码独立实现其功能...","head":[["meta",{"property":"og:url","content":"https://noby.site/codenotes/javase/day10%20%E5%A4%9A%E6%80%81%E3%80%81%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Noby"}],["meta",{"property":"og:title","content":"day10 多态、软件设计模式"}],["meta",{"property":"og:description","content":"多态 理解：同一事物在不同情况下针对同一行为做出的不同反应，它是指在父类中定义的属性和方法被子类继承之后，可以表现出不同的行为，这使得同一个属性或方法在父类及其各个子类中具有不同的含义。; 多态的条件：; 有继承关系。; 有方法的重写。 ; 有父类引用指向子类对象。; 多态实现高内聚低耦合; 高内聚：各个模块功能可以在不依赖其他模块的代码独立实现其功能..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-25T12:46:38.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"JavaSE"}],["meta",{"property":"article:modified_time","content":"2023-03-25T12:46:38.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"多态","slug":"多态","link":"#多态","children":[{"level":3,"title":"多态实现低耦合","slug":"多态实现低耦合","link":"#多态实现低耦合","children":[]}]},{"level":2,"title":"软件设计模式","slug":"软件设计模式","link":"#软件设计模式","children":[{"level":3,"title":"单例设计式","slug":"单例设计式","link":"#单例设计式","children":[]}]},{"level":2,"title":"javaBean","slug":"javabean","link":"#javabean","children":[]}],"git":{"createdTime":1678691437000,"updatedTime":1679748398000,"contributors":[{"name":"noby","email":"1326981297@qq.com","commits":2}]},"readingTime":{"minutes":5.51,"words":1653},"filePathRelative":"codenotes/javase/day10 多态、软件设计模式.md","localizedDate":"2023年3月13日"}');export{e as data};
