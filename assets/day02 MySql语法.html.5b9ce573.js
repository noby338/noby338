import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,b as n,d as s,a as t,e,r as l}from"./app.759ff6f5.js";const i={},u=e(`<h2 id="mysql-概念" tabindex="-1"><a class="header-anchor" href="#mysql-概念" aria-hidden="true">#</a> MySQL 概念</h2><ul><li>Structured Query Language 结构化查询语言</li><li>MySQL 默认库</li></ul><table><thead><tr><th>数据库名</th><th>解释</th></tr></thead><tbody><tr><td>information schema</td><td>数据库元数据，基础数据</td></tr><tr><td>mysql</td><td>配置数据库，其中包含用户信息（账户、密码）</td></tr><tr><td>performance schema</td><td>运行数据，日志文件，运行情况</td></tr><tr><td>test</td><td>测试数据库</td></tr></tbody></table><ul><li>SQL 工业化标准：使用 SQL 工业化标准做出来的 sql 语句，可以操作任何数据库，通用</li><li>常见的数据类型 <ul><li>字符串</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">char</span> ： 定长字符串。
	优点：存储性能高
	缺点：浪费空间
	eg ： name <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>  如果存储的数据字符个数不足<span class="token number">10</span>个，也会占<span class="token number">10</span>个的空间，最多 <span class="token number">255</span> 个字符
<span class="token keyword">varchar</span> ： 变长字符串。
	优点：节约空间
	缺点：存储性能底
	eg ： name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> 如果存储的数据字符个数不足<span class="token number">10</span>个，那就数据字符个数是几就占几个的空间
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><table><thead><tr><th>类型</th><th>解释</th></tr></thead><tbody><tr><td>float</td><td>浮点型</td></tr><tr><td>double</td><td>双精度类型</td></tr><tr><td>decimal(5,2)</td><td>小数类型</td></tr><tr><td>tinytext</td><td>存放最大长度为 255 个字符的字符串</td></tr><tr><td>text</td><td>存放最大长度为 65,535 个字符的字符串</td></tr><tr><td>mediumtext</td><td>存放最大长度为 16,777,215 个字符的字符串</td></tr><tr><td>longtext</td><td>存放最大长度为 4,294,967,295 个字符的字符串</td></tr><tr><td>date</td><td>日期，格式：%Y-%m-%d</td></tr><tr><td>datetime</td><td>日期时间组合，日期和时间的组合。格式：%Y-%m-%d hh:mm:ss</td></tr><tr><td>timetamp</td><td>时间戳，timestamp 值使用 Unix 纪元(&#39;1970-01-01 00:00:00&#39; UTC) 至今的描述来存储。格式：%Y-%m-%d hh:mm:ss</td></tr><tr><td>time</td><td>时间 int :整数</td></tr></tbody></table><ul><li>注意：SQL 语句除了登录和退出指令，其他指令都要在指令末位加上&quot;;&quot;</li><li>注释为： <ul><li>单行注释: -- 注释内容 或 <code>#注释内容</code>(MySQL 特有) <blockquote><p>注意：使用-- 添加单行注释时，--后面一定要加空格，而#没有要求。</p></blockquote></li><li>多行注释: /_ 注释 _/</li></ul></li><li>\`\`为转义字符</li><li>分类： <ul><li>DDL(Data Definition Language, 数据定义语言)：用于创建、修改、删除数据库、表、视图、索引、触发器的结构 <ul><li>create 创建</li><li>alter 修改表的结构</li><li>drop 删除</li></ul></li><li><em>DML</em>(Data Manipulation Language, 数据操作语言)： 可以操作数据库中表中记录的 增、删、改 <ul><li>insert 插入</li><li>update 更新</li><li>delete 删除</li><li>事务控制 <ul><li>start transaction</li><li>commit</li><li>rollback</li></ul></li></ul></li><li><em>DQL</em>(Data Query Language, 数据查询语言)：可以操作数据库中表中记录的 查 <ul><li>select &lt;字段名表&gt; from &lt;表或视图名&gt; where &lt;查询条件&gt;</li></ul></li><li>DCL(Data Control Language, 数据控制语言)：用于控制访问数据库的权限、角色等，包括授权、回收权限，而且只有特定的用户才有权限使用这些语句 <ul><li>grant</li><li>revoke</li></ul></li></ul></li></ul><h2 id="ddl-数据定义语言" tabindex="-1"><a class="header-anchor" href="#ddl-数据定义语言" aria-hidden="true">#</a> DDL：数据定义语言</h2><table><thead><tr><th>代码</th><th>解释</th></tr></thead><tbody><tr><td>show databases；</td><td>查询数据库</td></tr><tr><td>create database if not exists 数据库名称;</td><td>数据库的增加判断</td></tr><tr><td>create database 数据库名 default character set utf8</td><td>创建数据库的同时指定该数据库编码</td></tr><tr><td>show create database 数据库名</td><td>显示数据库创建信息</td></tr><tr><td>drop database 数据库名</td><td>删除数据库</td></tr><tr><td>alter database 数据库名 default character set utf8</td><td>修改数据库默认编码</td></tr><tr><td>set names gbk</td><td>临时设置 MySQL 编码</td></tr><tr><td>use 数据库名</td><td>选中数据库</td></tr></tbody></table><table><thead><tr><th>代码</th><th>解释</th></tr></thead><tbody><tr><td>show tables;</td><td>查看当前数据库的表</td></tr><tr><td>create table 表名(<br>字段名 字段类型,<br>字段名 字段类型<br>)</td><td>创建表</td></tr><tr><td>alter table 表名 change 被修改字段名 新字段名 字段类型</td><td>修改字段名、类型(注意：当有字段值存在时，不能修改字段类型)</td></tr><tr><td>alter table 表名 add (column) 字段名 字段类型 (after 字段名)</td><td>添加字段(在某个字段之后)</td></tr><tr><td>alter table 表名 modify (column) 字段名 新字段类型;</td><td>修改字段类型</td></tr><tr><td>alter table 表名 drop (column) 字段名</td><td>删除字段</td></tr><tr><td>alter table 旧表名 rename (to) 新表名</td><td>重命名</td></tr><tr><td>rename table 旧表名 to 新表名</td><td>重命名</td></tr><tr><td>show create table 表名</td><td>显示表的创建信息</td></tr><tr><td>desc 表名</td><td>查看表的结构</td></tr><tr><td>truncate 表名</td><td>保留字段，删除所有记录。(删除原表，创建一张字段相同的无记录空表，属于 DDL 的 sql 语句)</td></tr><tr><td>drop table 表名</td><td>删除表</td></tr><tr><td>drop table if exists 表名;</td><td>删除表，该语法可以避免报错</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 库的操作</span>
<span class="token comment"># 显示所有库</span>
<span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
<span class="token comment"># 使用指定库</span>
<span class="token keyword">use</span> stage1<span class="token punctuation">;</span>
<span class="token comment"># 创建库</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> noby_database<span class="token punctuation">;</span>
<span class="token comment"># 查看库的创建信息</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">database</span> noby_database<span class="token punctuation">;</span>
<span class="token comment"># 删除库</span>
<span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> noby_database<span class="token punctuation">;</span>

<span class="token comment">-- 表的操作</span>
<span class="token comment"># 显示当前库的所有表</span>
<span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>
<span class="token comment"># 删除存在的表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> student<span class="token punctuation">;</span>
<span class="token comment"># 创建表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>
    id       <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token comment">-- 整型，四个字节</span>
    name     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">-- 可变长字符串（字符串宽度小于等于10即可）</span>
    gender   <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">-- 不可变长字符串</span>
    birthday <span class="token keyword">date</span><span class="token punctuation">,</span><span class="token comment">-- date表示日期，tatetime表示日期和时间</span>
    score    <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">-- 5表示数据的总长度，2表示小数点后面的位数</span>
    email    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    tel      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">status</span>   <span class="token keyword">tinyint</span><span class="token comment">-- 小整型，1个字节</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 查看表的结构</span>
<span class="token keyword">desc</span> student<span class="token punctuation">;</span>
<span class="token comment"># 查看表的创建信息</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">;</span>
<span class="token comment"># 修改字段名</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">rename</span> person<span class="token punctuation">;</span>
<span class="token comment"># 修改字段名</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> person <span class="token keyword">rename</span> <span class="token keyword">to</span> student<span class="token punctuation">;</span>
<span class="token comment"># 添加字段</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">add</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">after</span> tel<span class="token punctuation">;</span>
<span class="token comment"># 修改字段类型</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">modify</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 修改字段名和字段类型</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student change address addr <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 删除字段</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">drop</span> addr<span class="token punctuation">;</span>
<span class="token comment"># 删除原表，创建一张字段相同的无记录空表</span>
<span class="token keyword">truncate</span> student<span class="token punctuation">;</span>
<span class="token comment"># 删除表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> student<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="约束" tabindex="-1"><a class="header-anchor" href="#约束" aria-hidden="true">#</a> 约束</h3><ul><li>定义：限制表中的数据，保证添加到数据表中的数据准确和可靠性！凡是不符合约束的数据，插入时就会失败！ <ul><li>如：性别字段只有男和女，年龄只有正整数；</li></ul></li><li>约束条件在创建表时可以使用， 也可以修改表的时候添加约束条件</li><li>MySQL 中的 6 大约束： <ul><li>默认值约束：可以给字段设置默认值，如果在插入数据时不给该字段赋值，那么就采用默认值</li><li>非空约束：字段的值不能是 null(可以没值)</li><li>唯一约束：字段的值是唯一的，该字段不能出现重复的数据</li><li>主键约束：非空+唯一，一般一张表只有一个主键</li><li>自增长约束：新插入的数据的值是在前一条数据的基础上自增而来的</li><li>外键约束：B 表中的某个字段的值收到 A 表某个字段的值的约束</li></ul></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 数据库定义语言，约束</span>
<span class="token comment">-- 1、默认值约束：</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span><span class="token comment"># 这里的反引号表示会和系统的标识符冲突，使用自定义标识符</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
    id     <span class="token keyword">int</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;女&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 当填写该字段时，使用该值</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;令狐冲&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 当未填写该字段时，该值使用默认值</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;岳灵珊&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 当该字段填写默认值时，使用默认值</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;林黛玉&#39;</span><span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 添加字段，同时给字段添加默认值约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">add</span> hobby <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;没有兴趣爱好&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 修改字段默认值约束，不会修改记录中已经填入的默认值，是新的默认值会变为新设置的默认值</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">modify</span> hobby <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;nohobby&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 删除默认值约束，不会删除记录中已经填入的默认值，是新的默认值会为null</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">modify</span> hobby <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">-- 2、非空约束</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
    id     <span class="token keyword">int</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment"># 非null</span>
    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;女&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 不可以为null</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 可以为&#39;&#39;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 添加字段，同时给字段添加非空约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">add</span> hobby <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
<span class="token comment"># 添加not null的字段约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">modify</span> hobby <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
<span class="token comment"># 删除约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">modify</span> hobby <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">-- 3、唯一约束</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
    id     <span class="token keyword">int</span> <span class="token keyword">unique</span><span class="token punctuation">,</span> <span class="token comment"># 唯一</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;女&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;令狐冲&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 将不能添加已存在的id(该字段设置了唯一约束)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;岳灵珊&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 添加unique的字段约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">modify</span> id <span class="token keyword">int</span> <span class="token keyword">unique</span><span class="token punctuation">;</span>
<span class="token comment"># 删除唯一约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">drop</span> <span class="token keyword">index</span> id<span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">-- 4、主键约束(非空+唯一)：通常加在int类型的字段上(id)，一般表都有主键</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
    id     <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span> <span class="token comment"># 主键</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;女&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;令狐冲&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 将不能添加已存在的id(该字段设置了主键约束)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;岳灵珊&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 将不能添加null值的id(该字段设置了主键约束)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;岳不群&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 添加primary key的字段约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">modify</span> id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">;</span>
<span class="token comment"># 删除主键约束</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">drop</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>


<span class="token comment">-- 联合主键：将多个字段设置为一个主键</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> teacher<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> teacher
<span class="token punctuation">(</span><span class="token comment"># 记录每位老师不同班级学科成绩</span>
    tid   <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment"># 工号</span>
    cid   <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment"># 班级编号</span>
    grade <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment"># 学科成绩</span>
    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>tid<span class="token punctuation">,</span> cid<span class="token punctuation">)</span> <span class="token comment"># 联合主键</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment"># 不能插入相同的联合主键</span>
<span class="token keyword">desc</span> teacher<span class="token punctuation">;</span>


<span class="token comment">-- 5、自增长约束</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
    id     <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span> <span class="token comment"># 主键约束、自增长约束</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;女&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">auto_increment</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment"># 设置自增长的起始值为100</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token string">&#39;令狐冲&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 自增长约束在插入字段值时可根据最大值记录自动增加1</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> gender<span class="token punctuation">)</span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token string">&#39;岳灵珊&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 可以填入default，如果第一条记录的di字段值设置为default，则id为默认起始值。</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;岳不群&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 设置自增长值</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
    <span class="token keyword">auto_increment</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>


<span class="token comment">-- 6、外键约束</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span><span class="token comment"># 用户表(父表)</span>
    id     <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span> <span class="token comment"># 主键约束、自增长约束</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;女&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">auto_increment</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment"># 设置自增长的起始值为100</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;noby&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;kace&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;july&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> house<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> house
<span class="token punctuation">(</span><span class="token comment"># 房屋表（子表）</span>
    id        <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span> <span class="token comment"># 主键约束、自增长约束</span>
    <span class="token identifier"><span class="token punctuation">\`</span>address<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>user_id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment"># 用户id，值必须为用户表中的id值</span>
    <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>user_id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">references</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">cascade</span> <span class="token comment"># 给user_id字段添加外键约束，它的值受到user表中的id的约束</span>
<span class="token comment">#  on update cascade 当更新父表时同时更新子表</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> house <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;chengdu&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> house <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;beijing&#39;</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> house <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;shanghai&#39;</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 没有103主键的user，添加失败</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> house <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;shengzheng&#39;</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">desc</span> house<span class="token punctuation">;</span>

<span class="token comment"># 父表更新主键，子表自动更新外键（定义子表时所设置）</span>
<span class="token keyword">update</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token keyword">set</span> id <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">102</span><span class="token punctuation">;</span>
<span class="token comment"># 删除父表的数据前应该先删除掉子表的数据</span>
<span class="token keyword">delete</span>
<span class="token keyword">from</span> house
<span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment"># 直接执行此步报错</span>
<span class="token keyword">delete</span>
<span class="token keyword">from</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span>
<span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="表之间的对应关系" tabindex="-1"><a class="header-anchor" href="#表之间的对应关系" aria-hidden="true">#</a> 表之间的对应关系</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 数据库定义语言，表之间的关系</span>

<span class="token comment">-- 表与表之间的一对多关系</span>
<span class="token comment"># 部门表（主表）</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> department<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> department
<span class="token punctuation">(</span>
    id       <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    dep_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    address  <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> department<span class="token punctuation">(</span>dep_name<span class="token punctuation">,</span> address<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;广州&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;深圳&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 员工表(从表)，创建从表前应该先创建主表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> employee<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> employee
<span class="token punctuation">(</span>
    id            <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>                                 <span class="token comment"># 员工id，主键（非空和唯一），且自增长</span>
    name          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>                                   <span class="token comment"># 员工姓名，非空并且唯一</span>
    join_date     <span class="token keyword">date</span>         <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>                                          <span class="token comment"># 入职日期，非空</span>
    salary        <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>                                          <span class="token comment"># 工资，非空</span>
    bonus         <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">,</span>                                         <span class="token comment"># 奖金，如果没有奖金默认为0</span>
    department_id <span class="token keyword">int</span><span class="token punctuation">,</span>

    <span class="token comment"># 添加外键 department_id,关联 department 表的id主键</span>
    <span class="token keyword">constraint</span> fk_emp_dept <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>department_id<span class="token punctuation">)</span> <span class="token keyword">references</span> department <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token comment"># fk_emp_dept为外键名称</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> employee <span class="token punctuation">(</span>name<span class="token punctuation">,</span> join_date<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> bonus<span class="token punctuation">,</span> department_id<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span> <span class="token number">8800</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span> <span class="token number">8800</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span> <span class="token number">8800</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span> <span class="token number">8800</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">-- 表的多对多关系</span>
<span class="token comment">/*
   多对多：
      * 如：订单 和 商品
      * 一个商品对应多个订单，一个订单包含多个商品

   实现方式：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键
*/</span>
<span class="token comment"># 订单表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
    id           <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    payment      <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    payment_type <span class="token keyword">tinyint</span><span class="token punctuation">,</span>
    <span class="token keyword">status</span>       <span class="token keyword">tinyint</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> payment<span class="token punctuation">,</span> payment_type<span class="token punctuation">,</span> <span class="token keyword">status</span><span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">17998</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 商品表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> good<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> good
<span class="token punctuation">(</span>
    id        <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    title     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    price     <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    inventory <span class="token keyword">int</span> <span class="token comment">#库存</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> good<span class="token punctuation">(</span>id<span class="token punctuation">,</span> title<span class="token punctuation">,</span> price<span class="token punctuation">,</span> inventory<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;iphone13&#39;</span><span class="token punctuation">,</span> <span class="token number">8999</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;pencil&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">&#39;bag&#39;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 订单商品中间表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> order_good_item<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> order_good_item
<span class="token punctuation">(</span>
    id       <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    order_id <span class="token keyword">int</span><span class="token punctuation">,</span>
    goods_id <span class="token keyword">int</span><span class="token punctuation">,</span>
    count    <span class="token keyword">int</span><span class="token punctuation">,</span>
    <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>order_id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">references</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">cascade</span><span class="token punctuation">,</span>
    <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>goods_id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">references</span> good <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">cascade</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> order_good_item<span class="token punctuation">(</span>id<span class="token punctuation">,</span> order_id<span class="token punctuation">,</span> goods_id<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dml-数据操作语言" tabindex="-1"><a class="header-anchor" href="#dml-数据操作语言" aria-hidden="true">#</a> DML：数据操作语言</h2><table><thead><tr><th>代码</th><th>解释</th></tr></thead><tbody><tr><td>select @@identity;</td><td>@@identity 会记录上一条 insert 语句添加数据的自增主键值 (数据库中@@开头的是系统变量 )</td></tr><tr><td>insert into 表名 values(字段值 1，字段值 2，字段值 3)，<br>(字段值 1，字段值 2，字段值 3)</td><td>插入数据(所有字段)</td></tr><tr><td>insert into 表名(字段名 1，字段名 2) value(字段值 1，字段值 2)</td><td>插入数据(部分字段)</td></tr><tr><td>update 表名 set 字段名 = 字段值,字段名 = 字段值 where 条件</td><td>通过指定条件修改字段值</td></tr><tr><td>delete from 表名 (where 条件)</td><td>保留字段，删除所有记录。(删除满足条件的记录)</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 数据库操作语言</span>
<span class="token comment"># 插入记录部分字段（value和values无区别）</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;noby&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 插入记录的简写，插入全部字段</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> student
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-12&#39;</span><span class="token punctuation">,</span> <span class="token number">88.88</span><span class="token punctuation">,</span> <span class="token string">&#39;lisi@qq.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;13888888888&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 同时插入多条记录</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> student
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span> <span class="token number">88.88</span><span class="token punctuation">,</span> <span class="token string">&#39;lisi@qq.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;13888888888&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span> <span class="token number">88.88</span><span class="token punctuation">,</span> <span class="token string">&#39;lisi@qq.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;13888888888&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span> <span class="token number">88.88</span><span class="token punctuation">,</span> <span class="token string">&#39;lisi@qq.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;13888888888&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 删除记录</span>
<span class="token keyword">delete</span>
<span class="token keyword">from</span> student
<span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 修改记录</span>
<span class="token keyword">update</span> student
<span class="token keyword">set</span> name <span class="token operator">=</span> <span class="token string">&#39;王二麻子&#39;</span>
<span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dql-数据查询语言" tabindex="-1"><a class="header-anchor" href="#dql-数据查询语言" aria-hidden="true">#</a> DQL：数据查询语言</h2><p>DQL 的完整语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
    字段列表
<span class="token keyword">FROM</span>
    表名列表
<span class="token keyword">WHERE</span>
    条件列表
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
    分组字段
<span class="token keyword">HAVING</span>
    分组后条件
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
    排序字段
<span class="token keyword">LIMIT</span>
    分页限定
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断" aria-hidden="true">#</a> 条件判断</h3><table><thead><tr><th>语句</th><th>解释</th></tr></thead><tbody><tr><td><code>&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=,&amp;amp;</code></td><td>小于，小于等于，大于，大于等于，&amp; 和</td></tr><tr><td>=,&gt;,&lt;,&gt;=,&lt;=,!=,&lt;&gt;</td><td></td></tr><tr><td>(not) between...and...</td><td>(不)在……和……之间</td></tr><tr><td>(not) in(a，b，c)</td><td>(不)在(a，b，c)之中</td></tr><tr><td>and,&amp;&amp;</td><td>并且</td></tr><tr><td>or,ll</td><td>或者</td></tr><tr><td>is (not) null</td><td>(不)是 null 值 (判断 null 值不能用 = 或者 !=)</td></tr><tr><td>distinct</td><td>去除重复</td></tr><tr><td>as</td><td>作为</td></tr><tr><td>select 字段 from 表名 where 字段 like &#39;%字符 1<em>字符 2</em>&#39;</td><td>模糊查询，%表示多个字符，_表示一个字符，这两个字符之间可以任意组合</td></tr></tbody></table><h3 id="单表查询" tabindex="-1"><a class="header-anchor" href="#单表查询" aria-hidden="true">#</a> 单表查询</h3><table><thead><tr><th>代码</th><th>解释</th></tr></thead><tbody><tr><td>select * form 表名</td><td>查询表的所有字段</td></tr><tr><td>select distinct 字段 1，字段 2 from 表名</td><td>当查询的结果中的字段 1 和字段 2 都相同时，只显示一项</td></tr><tr><td>select 字段 1，字段 2...... from 表名</td><td>查询指定字段</td></tr><tr><td>select 字段 1 as 别名，字段 2 as 别名</td><td>给查询的结果起别名（as 可以省略）</td></tr><tr><td>select 字段名，字段名..... from 表名 where 条件;</td><td>条件查询</td></tr><tr><td>select 字段名，字段名..... from 表名 字段 like 通配符;</td><td>模糊查询 _表示一个字符 %表示多个字符</td></tr><tr><td>select 字段... from 表名 order by 字段 1 排序方式，字段 2 排序方式;</td><td>按照某个排序方式对某个字段进行排序查询，desc（降序），asc（升序，默认值），当字段 1 的排序相同时再进行字段 2 的排序</td></tr><tr><td>select 字段... from 表名 limit 起始索引，页大小</td><td>分页查询</td></tr><tr><td>count (字段) 统计非空数据的条数(相同数据也计数)<br>avg (字段) 计算结果的平均值<br>sum (字段) 求和<br>max (字段) 最大值<br>min (字段) 最小值 4</td><td>聚合查询：对查询出来数据做统计操作<br>如：select max(sal),min(sal), avg(sal),sum(sal) from emp;</td></tr><tr><td>group by 字段<br>如：select avg(sal) from emp group by deptno;</td><td>分组查询：将结果集按照指定的字段值一样的记录看作同一组，配合聚合函数使用可以对每组的数据进行统计并得出结果</td></tr><tr><td>group by 字段 having 聚合函数条件判断语句<br>如：select max(sal),deptno from emp group by deptno having avg(sal)&gt;2000;</td><td>如果想要将聚合函数作为查询条件，不能直接跟在 where 后面，需要将聚合函数写在 having 子句中；having 必须跟在 group by 子句之后,作用是添加过滤条件将不满足的分组去除；<br>查看部门平均工资高于 2000 的这些部门的最高工资是多少</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 数据库查询语言</span>
<span class="token comment">/*
 DQL完整语法：
select
    字段列表
from
    表名列表
where
    条件列表
group by
    分组字段
having
    分组后条件
order by
    排序字段
limit
    分页限定
 */</span><span class="token comment">-- 数据准备</span>
<span class="token keyword">use</span> stage1<span class="token punctuation">;</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> stu<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> stu <span class="token punctuation">(</span>
                     id <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment"># 编号</span>
                     name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 姓名</span>
                     age <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment"># 年龄</span>
                     sex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 性别</span>
                     address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 地址</span>
                     math <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 数学成绩</span>
                     english <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 英语成绩</span>
                     hire_date <span class="token keyword">date</span> <span class="token comment"># 入学时间</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> stu<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>address<span class="token punctuation">,</span>math<span class="token punctuation">,</span>english<span class="token punctuation">,</span>hire_date<span class="token punctuation">)</span>
<span class="token keyword">values</span>
    <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;马运&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;杭州&#39;</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token string">&#39;1995-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;马花疼&#39;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;深圳&#39;</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;马斯克&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token string">&#39;1999-09-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;马斯克&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token string">&#39;1999-09-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;柳白&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;湖南&#39;</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token string">&#39;1997-09-05&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;柳青&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;湖南&#39;</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&#39;刘德花&#39;</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">&#39;张学右&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">&#39;德玛西亚&#39;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;南京&#39;</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token string">&#39;1994-09-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">-- 基础查询</span>
<span class="token comment"># 查询所有字段，开发中尽量不用</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>
<span class="token comment"># 给查询的结果起别名</span>
<span class="token keyword">select</span> name 名字<span class="token punctuation">,</span>age <span class="token keyword">as</span> 年龄<span class="token punctuation">,</span>sex <span class="token keyword">from</span> stu <span class="token punctuation">;</span>
<span class="token comment"># 条件查询</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>age <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token comment"># 范围（包含两头）</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> hire_date <span class="token operator">between</span> <span class="token string">&#39;1998-1-1&#39;</span> <span class="token operator">and</span> <span class="token string">&#39;1998-12-31&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 范围，指定个数</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>age <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">in</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 等于空的查询方法（不能使用=）</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>english <span class="token keyword">from</span> stu <span class="token keyword">where</span> english <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
<span class="token comment"># 模糊查询，_表示单个字符</span>
<span class="token keyword">select</span> name <span class="token keyword">from</span> stu <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;柳_&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 模糊查询，%表示多个字符</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>hire_date <span class="token keyword">from</span> stu <span class="token keyword">where</span> hire_date <span class="token operator">like</span> <span class="token string">&#39;%09%&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># distinct可去除查询结果中的相同记录，本来有两个马斯克满足条件</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>sex <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">=</span> <span class="token number">55</span><span class="token punctuation">;</span>
<span class="token comment"># 排序，desc表示降序，asc表示升序（默认），当math字段的记录相同时通过english字段进行排序</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>math<span class="token punctuation">,</span>english <span class="token keyword">from</span> stu <span class="token keyword">order</span> <span class="token keyword">by</span> math <span class="token keyword">desc</span><span class="token punctuation">,</span>english <span class="token keyword">asc</span><span class="token punctuation">;</span>

<span class="token comment">-- 聚合函数</span>
<span class="token comment">/* 所有的聚合函数中null都不参与运算 */</span><span class="token comment"># 统计记录的条数一般用*</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>
<span class="token comment"># min计算中不统计null值</span>
<span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>
<span class="token comment"># 同时输出其他非聚合函数的字段</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>math <span class="token keyword">from</span> stu <span class="token keyword">where</span> math <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 分组查询</span>
<span class="token comment">/* 注意：分组之后，查询的字段为聚合函数和分组字段，查询其他字段无意义 */</span><span class="token comment"># 查询男同学和女同学各自的数学平均分，以及各自人数</span>
<span class="token keyword">select</span> sex<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">group</span> <span class="token keyword">by</span> sex<span class="token punctuation">;</span><span class="token comment"># 这里的分组字段为sex，查询中输入其他字段将无意义</span>
<span class="token comment"># 查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组</span>
<span class="token keyword">select</span> sex<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> math <span class="token operator">&gt;</span> <span class="token number">70</span> <span class="token keyword">group</span> <span class="token keyword">by</span> sex<span class="token punctuation">;</span><span class="token comment"># where math &gt; 70 分组前的条件限定（表示参与分组的条件）</span>
<span class="token comment"># 查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组，分组之后人数大2</span>
<span class="token keyword">select</span> sex<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> math <span class="token operator">&gt;</span> <span class="token number">70</span> <span class="token keyword">group</span> <span class="token keyword">by</span> sex <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">-- having count(*) &gt; 2 分组后的过滤条件（显示分组的条件）</span>
<span class="token comment">/*
where和having区别：
·执行时机不一样：where是分组之前进行限定，不满足where条件，则不参与分组，而having是分组之后对结果进行过滤。
·可判断的条件不一样：where不能对聚合函数进行判断，having可以。
执行顺序：where&gt;聚合函数&gt;having
 */</span>
<span class="token comment">-- 分页查询</span>
<span class="token comment">/* 其实索引=（页码-1）*每页条数 */</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment"># 0表示查询的起始记录（0开始），3表示显示的条数</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">limit</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment"># 第二页</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">limit</span> <span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment"># 第三页</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多表查询" tabindex="-1"><a class="header-anchor" href="#多表查询" aria-hidden="true">#</a> 多表查询</h3><ul><li>联合多张表查询数据即关联查询，查询的结果集中的字段来自多张表，关联查询的重点是连接条件,数据库是根据连接条件对表中的数据做关联然后查询内容的</li><li>笛卡尔积：关联查询通常要加连接条件,不写连接条件会出现&quot;笛卡尔积”，笛卡尔积通常是一个无意义的结果集，笛卡尔积是将关联查询表中的数据一一连接一遍而产生的结果集，数据量为关联查询表数据量的乘积</li></ul><h4 id="连接查询" tabindex="-1"><a class="header-anchor" href="#连接查询" aria-hidden="true">#</a> 连接查询</h4><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220426193628033.png" alt="image-20220426193628033"></p><ul><li>内连接查询 ：相当于查询 AB 交集数据 <ul><li>隐式内连接</li><li>显示内连接</li></ul></li><li>外连接查询 <ul><li>左外连接查询 ：相当于查询 A 表所有数据和交集部门数据</li><li>右外连接查询 ： 相当于查询 B 表所有数据和交集部分数据</li></ul></li></ul><h4 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询" aria-hidden="true">#</a> 子查询</h4><ul><li>子查询根据查询结果不同，作用不同 <ul><li>子查询语句结果是单行单列，子查询语句作为条件值，使用 = != &gt; &lt; 等进行条件判断</li><li>子查询语句结果是多行单列，子查询语句作为条件值，使用 in 等关键字进行条件判断</li><li>子查询语句结果是多行多列，子查询语句作为虚拟表</li></ul></li></ul>`,33),d=n("thead",null,[n("tr",null,[n("th",null,"代码"),n("th",null,"解释")])],-1),k=n("tr",null,[n("td",null,"select * from emp,dept where emp.deptno = dept.deptno;"),n("td",null,"通过关联字消除笛卡尔积（隐式内连接）")],-1),r=n("tr",null,[n("td",null,"select e.ename,e.deptno,d.dname from emp e,dept d where e.deptno=d.deptno;"),n("td",null,"对于查询的某个字段在多张表上同时存在，我们可以使用表名或表别名来指定该字段来自哪张表")],-1),m=n("tr",null,[n("td",null,[s("select * from zhangsan,lisi where zhangsan."),n("code",null,"name"),s(" = lisi."),n("code",null,"name"),s(";")]),n("td",null,"通过关联字段做等值判断")],-1),v=n("tr",null,[n("td"),n("td")],-1),b={href:"http://zhangsan.name",target:"_blank",rel:"noopener noreferrer"},y={href:"http://lisi.name",target:"_blank",rel:"noopener noreferrer"},w=n("td",null,"内连接：查询出两张表中的共同数据",-1),h=n("tr",null,[n("td",null,"select * from boy left outer join girl on boy.gid = girl.gid;"),n("td",null,"左外连接：将左边表的所有数据查询出来，然后与右表的数据进行匹配，匹配不上的用 null 进行匹配")],-1),g=n("tr",null,[n("td",null,"select * from boy right outer join girl on boy.gid = girl.gid;"),n("td",null,"右外连接：将右边表的所有数据查询出来，然后与左表的数据进行匹配，匹配不上的用 null 进行匹配")],-1),f=n("tr",null,[n("td",null,"(select _ from boy) union all (select _ from girl);"),n("td",null,"全外连接：两张表的所有数据都查询出来")],-1),_=n("tr",null,[n("td",null,"select e.ename,m.ename from emp e,emp m where e.mgr = m.empno;"),n("td",null,"自连接：在有些情况下查询数据时需要将一张表当做两张表来使用，然后才能查询出指定的内容；")],-1),x=n("tr",null,[n("td"),n("td",null,"子查询：将一条 sql 查询出来的结果作为另一条 sql 的查询条件来使用")],-1),q=n("tr",null,[n("td",null,"(select max(sal) sal,deptno from emp group by deptno) as m_sal"),n("td",null,"将查询出来的结果作为一张表来使用")],-1),L=e(`<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 数据库查询语言，多表查询</span>
<span class="token comment">-- 数据准备</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> emp<span class="token punctuation">;</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> dep<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> dep <span class="token comment"># 部门表</span>
<span class="token punctuation">(</span>
    id   <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp <span class="token comment"># 员工表</span>
<span class="token punctuation">(</span>
    id        <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    name      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    gender    <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       <span class="token comment"># 性别</span>
    salary    <span class="token keyword">double</span><span class="token punctuation">,</span>                        <span class="token comment"># 工资</span>
    hire_date <span class="token keyword">date</span><span class="token punctuation">,</span>                          <span class="token comment"># 入职日期</span>
    dep_id    <span class="token keyword">int</span><span class="token punctuation">,</span>
    <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">references</span> dep <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token comment"># 外键，关联部门表(部门表的主键)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> dep <span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> emp<span class="token punctuation">(</span>name<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> hire_date<span class="token punctuation">,</span> dep_id<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;孙悟空&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">7200</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-02-24&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">,</span> <span class="token string">&#39;2010-12-02&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;唐僧&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">9000</span><span class="token punctuation">,</span> <span class="token string">&#39;2008-08-08&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;白骨精&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token string">&#39;2015-10-07&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;蜘蛛精&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">4500</span><span class="token punctuation">,</span> <span class="token string">&#39;2011-03-14&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token string">&#39;小白龙&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">2500</span><span class="token punctuation">,</span> <span class="token string">&#39;2011-02-14&#39;</span><span class="token punctuation">,</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 笛卡尔积 ： 有 a ,b两个集合 取 a,b所有的组合情况</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp<span class="token punctuation">,</span>
     dep<span class="token punctuation">;</span>

<span class="token comment">-- 内连接查询</span>
<span class="token comment"># 隐式内连接</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp<span class="token punctuation">,</span>
     dep
<span class="token keyword">where</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>

<span class="token comment"># 查询 emp的 name，gender。dep表的name</span>
<span class="token keyword">select</span> emp<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
       emp<span class="token punctuation">.</span>gender<span class="token punctuation">,</span>
       dep<span class="token punctuation">.</span>name
<span class="token keyword">from</span> emp<span class="token punctuation">,</span>
     dep
<span class="token keyword">where</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>

<span class="token comment"># 给表 起别名</span>
<span class="token keyword">select</span> t1<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
       t1<span class="token punctuation">.</span>gender<span class="token punctuation">,</span>
       t2<span class="token punctuation">.</span>name
<span class="token keyword">from</span> emp t1<span class="token punctuation">,</span>
     dep t2
<span class="token keyword">where</span> t1<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> t2<span class="token punctuation">.</span>id<span class="token punctuation">;</span>


<span class="token comment"># 显式内连接</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp
         <span class="token keyword">inner</span> <span class="token keyword">join</span> dep <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> dep
         <span class="token keyword">inner</span> <span class="token keyword">join</span> emp <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token comment"># inner可以省略</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp
         <span class="token keyword">join</span> dep <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>


<span class="token comment">-- 外连接查询</span>
<span class="token comment"># outer可以省略</span>
<span class="token comment"># 左外连接</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp
         <span class="token keyword">left</span> <span class="token keyword">join</span> dep <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token comment"># 查询员工表所有数据和对应的部门信息，emp显示在前，显示emp外键为null的记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> dep
         <span class="token keyword">left</span> <span class="token keyword">join</span> emp <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token comment"># 查询部门表所有数据和对应的员工信息，dep显示在前，显示dep外键为null的记录</span>
<span class="token comment"># 右外连接</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp
         <span class="token keyword">right</span> <span class="token keyword">join</span> dep <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token comment"># 查询员工表所有数据和对应的部门信息，emp显示在前，显示dep外键为null的记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> dep
         <span class="token keyword">right</span> <span class="token keyword">join</span> emp <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token comment"># 查询部门表所有数据和对应的员工信息，dep显示在前，显示emp外键为null的记录</span>


<span class="token comment">-- 子查询</span>
<span class="token comment"># 查询工资高于猪八戒的员工信息</span>
<span class="token comment">/*子查询语句结果是单行单列，子查询语句作为条件值，使用 =  !=  &gt;  &lt;  等进行条件判断*/</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp
<span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询 &#39;财务部&#39; 和 &#39;市场部&#39; 所有的员工信息</span>
<span class="token comment">/*子查询语句结果是多行单列，子查询语句作为条件值，使用 in 等关键字进行条件判断*/</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> emp
<span class="token keyword">where</span> dep_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dep <span class="token keyword">where</span> name <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment"># 查询入职日期是 &#39;2011-11-11&#39; 之后的员工信息和部门信息</span>
<span class="token comment">/*子查询语句结果是多行多列，子查询语句作为虚拟表*/</span>
<span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> hire_date <span class="token operator">&gt;</span> <span class="token string">&#39;2011-11-11&#39;</span><span class="token punctuation">)</span> t1<span class="token punctuation">,</span>
     dep
<span class="token keyword">where</span> t1<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><ul><li>sql 函数常用语 DQL 和 DML 中</li></ul><p>日期、时间：</p><table><thead><tr><th>函数</th><th>解释</th></tr></thead><tbody><tr><td>sysdate()</td><td>获取当前日期和时间</td></tr><tr><td>curdate()</td><td>获取当前日期</td></tr><tr><td>curtime()</td><td>获取当前时间</td></tr><tr><td>now()</td><td>获取当前日期和时间</td></tr><tr><td>current_timestamp()</td><td>获取当前时间戳，控制台打印时间而非时间戳</td></tr></tbody></table><p>字符串</p><table><thead><tr><th>函数</th><th>解释</th></tr></thead><tbody><tr><td>concat()</td><td>连接</td></tr><tr><td>length()</td><td>长度</td></tr><tr><td>lower()</td><td>转换为小写</td></tr><tr><td>upper()</td><td>转换为大写</td></tr><tr><td>trim()</td><td>去空白</td></tr><tr><td>ltrim()</td><td>去左边空格</td></tr><tr><td>rtrim()</td><td>去右边空格</td></tr></tbody></table><p>null</p><table><thead><tr><th>函数</th><th>解释</th></tr></thead><tbody><tr><td>ifnull(num,0)</td><td>判断 num 是否为 null，为空返回 0，否则返回 num</td></tr><tr><td>if(x,y,z)</td><td>判断 x 是否为 null，如果为 null 返回 z，否则返回 y</td></tr></tbody></table><p>加密</p><table><thead><tr><th>函数</th><th>解释</th></tr></thead><tbody><tr><td>md5()</td><td>加密</td></tr></tbody></table><ul><li>null 的判断不能用 = 或 != ，而是 is 和 is not</li><li>任何数据和 null 的操作得到的都是 null</li></ul><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>-- 函数

-- 数据准备
use stage1;
drop table if exists stu;
create table stu (
                     id int, # 编号
                     name varchar(20), # 姓名
                     age int, # 年龄
                     sex varchar(5), # 性别
                     address varchar(100), # 地址
                     math double(5,2), # 数学成绩
                     english double(5,2), # 英语成绩
                     hire_date date # 入学时间
);
insert into stu(id,name,age,sex,address,math,english,hire_date)
values
    (1,&#39;马运&#39;,55,&#39;男&#39;,&#39;杭州&#39;,66,78,&#39;1995-09-01&#39;),
    (2,&#39;马花疼&#39;,45,&#39;女&#39;,&#39;深圳&#39;,98,87,&#39;1998-09-01&#39;),
    (3,&#39;马斯克&#39;,55,&#39;男&#39;,&#39;香港&#39;,56,77,&#39;1999-09-02&#39;),
    (4,&#39;马斯克&#39;,55,&#39;男&#39;,&#39;香港&#39;,56,77,&#39;1999-09-02&#39;),
    (5,&#39;柳白&#39;,20,&#39;女&#39;,&#39;湖南&#39;,76,65,&#39;1997-09-05&#39;),
    (6,&#39;柳青&#39;,20,&#39;男&#39;,&#39;湖南&#39;,86,null,&#39;1998-09-01&#39;),
    (7,&#39;刘德花&#39;,57,&#39;男&#39;,&#39;香港&#39;,99,99,&#39;1998-09-01&#39;),
    (8,&#39;张学右&#39;,22,&#39;女&#39;,&#39;香港&#39;,99,99,&#39;1998-09-01&#39;),
    (9,&#39;德玛西亚&#39;,18,&#39;男&#39;,&#39;南京&#39;,56,65,&#39;1994-09-02&#39;);


-- mysql自带函数
-- 日期、时间有关
# 日期时间
select sysdate();
# 日期时间
select now();
# 时间戳
select current_timestamp();
# 日期
select curdate();
# 时间
select curtime();

-- 字符串有关
select concat(&#39;Hello&#39;, &#39; &#39;, &#39;World&#39;);
select length(&#39;hello&#39;);
select lower(&#39;JAVA&#39;);
select upper(&#39;java&#39;);
select trim(&#39; java &#39;);
select ltrim(&#39; java &#39;);
select rtrim(&#39; java &#39;);

-- null有关
select name,ifnull(english,&#39;是空的&#39;) from stu;
select name,if(english,&#39;不是空的&#39;,&#39;是空的&#39;) from stu;

-- 加密有关
select md5(&#39;18435fdsf&#39;);

-- sql函数在DML中的应用
insert into stu value (10,&#39;函数在DML中的应用&#39;,18,&#39;男&#39;,&#39;南京&#39;,56,65,now());
-- sql函数在DQL中的应用
select *,concat(name,age) from stu;
select name,ifnull(english,&#39;是空的&#39;) from stu;
select name,if(english,&#39;不是空的&#39;,&#39;是空的&#39;) from stu;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事务" tabindex="-1"><a class="header-anchor" href="#事务" aria-hidden="true">#</a> 事务</h2><ul><li>事务的作用：事务处理可以用来维护数据库的完整性，保证成批的 SQL 语句要么全部执行，要么全部不执行</li></ul><ul><li>存储引擎的概念：在 mysql 中的数据用各种不同的技术存储在文件（或内存）中。这些技术中的每一种技术都使用不同的存储机制，索引技巧，并且最终提供广泛的不同的功能和能力。可以通过选择不同的技术，可以获得额外的速度或功能，从而改善应用的整体功能。这些不同的技术以及配套的相关功能在 mysql 中被称为存储引擎（也称为表类型）。 <ul><li>常见引擎：在 mysql 中用的最多的存储引擎有：innodb，bdb，myisam ,memory 等。其中 innodb 和 bdb 支持事务而 myisam 等不支持事务。</li></ul><ul><li>指定引擎创建表格：create table 表名(字段......) engine=innodb;</li></ul></li><li>事务的 4 大特性(ACID)： <ul><li>原子性( Atomicity)：原子性是指事务是一个不可再分割的工作单位，事务中的操作要么都发生，要么都不发生</li><li>一致性(Consistency)：一致性是指在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。这是说数据库事务不能破坏关系数据的完整性以及业务逻辑上的一致性。</li><li>隔离性(Isolation)：隔离性是指并发的事务是相互隔离的。即一个事务内部的操作及正在操作的数据必须封锁起来，不被企图进行修改的事务看到 。</li><li>持久性(Durability)：持久性是指在事务完成以后，该事务所对数据库所作的更改便持久的保存在数据库之中，并不会被回滚。 即使出现了任何事故比如断电等，事务一旦提交，则持久化保存在数据库中。</li></ul></li><li>事务的控制语句：</li></ul><table><thead><tr><th>语句</th><th>解释</th></tr></thead><tbody><tr><td>BEGIN</td><td>显式地开启一个事务</td></tr><tr><td>START TRANSACTION</td><td>显式地开启一个事务</td></tr><tr><td>COMMIT</td><td>提交事务</td></tr><tr><td>ROLLBACK</td><td>回滚事务</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 事务：让执行的多条SQL语句同时失败或成功；</span>

<span class="token keyword">show</span> engines<span class="token punctuation">;</span><span class="token comment">-- 显示引擎</span>

<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> boy<span class="token punctuation">;</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> boy <span class="token keyword">WHERE</span> gid <span class="token operator">in</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> boy <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;周杰伦&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- mysql 中如果不提交操作，对表的操作将不会起作用</span>
<span class="token keyword">set</span> autocommit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">-- 设置自动提交关闭(可能会临时存在缓存中，但未提交到数据库中),该设置只设置本次数据库操作(下次打开MySQL自动提交会重新开启)</span>
<span class="token keyword">set</span> autocommit <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 设置自动提交开启</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> boy <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;乔丹&#39;</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token comment">-- 关闭自动提交后可手动提交</span>


<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> goods<span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> goods<span class="token punctuation">(</span>
	id <span class="token keyword">INT</span><span class="token punctuation">,</span>
	<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	num <span class="token keyword">INT</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> goods <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;iphone13&#39;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;mate40&#39;</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;宝马520&#39;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
    id <span class="token keyword">int</span><span class="token punctuation">,</span>
    gid <span class="token keyword">int</span><span class="token punctuation">,</span>
    num <span class="token keyword">int</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> goods<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token comment">-- 如果在执行某条SQL时出现问题，那就应该回滚 删除缓存数据，不让这些数据生效</span>
<span class="token comment">-- 方式一：通过关闭自动提交后，两条语句执行完后，commit上传</span>
<span class="token keyword">set</span> autocommit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">-- 关闭自动提交</span>
<span class="token comment">-- 业务sql</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 购买iphone13 买了3台</span>
<span class="token keyword">update</span> goods <span class="token keyword">set</span> num <span class="token operator">=</span> num <span class="token operator">-</span> <span class="token number">3</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token comment">-- 手动提交</span>
<span class="token keyword">set</span> autocommit <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 开启自动提交</span>


<span class="token comment">-- 方式二：</span>
<span class="token keyword">begin</span><span class="token punctuation">;</span><span class="token comment">-- 手动开启事务</span>
<span class="token comment">-- 业务sql</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>order<span class="token punctuation">\`</span></span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 购买3台iphone13，写入一条订单记录</span>
<span class="token keyword">update</span> goods <span class="token keyword">set</span> num <span class="token operator">=</span> num <span class="token operator">-</span> <span class="token number">3</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 修改商品库存</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token comment">-- 如果业务sql不存在问题，则执行该语句(手动提交，写入sql)</span>
<span class="token keyword">rollback</span><span class="token punctuation">;</span><span class="token comment">-- 如果业务sql存在问题，则执行该语句(删除缓存数据，不写入sql)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="索引" tabindex="-1"><a class="header-anchor" href="#索引" aria-hidden="true">#</a> 索引</h2><ul><li>定义：索引（Index）是一种数据库对象(database、table、view、index)，是一种特殊的数据结构，用于提高查询的效率和速度(增加了 b-tree 结构)。索引可以帮助 MySQL 快速定位并访问存储在表中的数据，从而加速查询并提高数据库的性能。与对表进行扫描比较，使用索引可以大大减少查询所需的时间和资源。索引的建立可以针对一个或多个列，根据数据的特点选取不同的创建方式来提高查询效率。</li><li>分类 <ul><li>主键索引：用于标识一条记录的唯一性，</li><li>唯一索引：用于确保某个列的值在整个表中的唯一性。</li><li>普通索引：最常用的一种索引类型，用于提高查询的效率。</li><li>全文索引：则用于全文搜索等高级查询需求。</li></ul></li><li>一般来说，索引建立的主要原则是要尽可能少的创建索引，同时确保索引被应用在具有高选择性的列上。如果对于某列的查询，结果集较大，那么就不建议在这个列上创建索引，否则反而会降低查询效率。对于大型的数据库，索引的设计和使用可以对数据库的性能产生很大的影响，需要仔细选择和优化。以下情况适合添加索引： <ul><li>字段值绝大多数都是不重复的，b-tree 结构的构成根据数据的区别排列</li><li>该字段值基本上改动少，当添加新的节点时，b-tree 的结构就行需要重构</li></ul></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 索引(index)：是一种数据库对象(database、table、view、index)，可以加快搜索速度</span>

<span class="token comment">-- 数据准备</span>

<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> book<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> book <span class="token punctuation">(</span>
                      id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
                      <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
                      author <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
                      detail <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
                      price <span class="token keyword">double</span><span class="token punctuation">,</span>
                      <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token keyword">engine</span> <span class="token operator">=</span> myisam row_format <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>

<span class="token comment">-- 创建存储过程</span>
<span class="token keyword">drop</span> <span class="token keyword">procedure</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> batchinsertbook<span class="token punctuation">;</span>
<span class="token keyword">delimiter</span> $
<span class="token keyword">create</span> <span class="token keyword">procedure</span> batchinsertbook<span class="token punctuation">(</span><span class="token operator">in</span> <span class="token keyword">start</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token operator">in</span> loop_time <span class="token keyword">int</span><span class="token punctuation">)</span>
<span class="token keyword">begin</span>
    <span class="token keyword">declare</span> var <span class="token keyword">int</span><span class="token punctuation">;</span>
    <span class="token keyword">declare</span> id <span class="token keyword">int</span><span class="token punctuation">;</span>
    <span class="token keyword">declare</span> bname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">set</span> var <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">set</span> id<span class="token operator">=</span> <span class="token keyword">start</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> var <span class="token operator">&lt;</span> loop_time <span class="token keyword">do</span>
            <span class="token keyword">set</span> bname <span class="token operator">=</span> concat<span class="token punctuation">(</span><span class="token string">&#39;java基础入门&#39;</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">insert</span> <span class="token keyword">into</span> book<span class="token punctuation">(</span>id<span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>author<span class="token punctuation">,</span>detail<span class="token punctuation">,</span>price<span class="token punctuation">)</span>
            <span class="token keyword">values</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>bname<span class="token punctuation">,</span><span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;这本书主要值针对没有java基础人员的入门教程&#39;</span><span class="token punctuation">,</span><span class="token number">1.23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">set</span> id<span class="token operator">=</span> id <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">set</span> var <span class="token operator">=</span> var <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">while</span><span class="token punctuation">;</span><span class="token keyword">end</span> $

<span class="token comment">-- 禁用索引，加快数据导入速度</span>
<span class="token keyword">alter</span>  <span class="token keyword">table</span>  book  <span class="token keyword">disable</span>  <span class="token keyword">keys</span><span class="token punctuation">;</span>

<span class="token comment">-- 调用存储过程导入200w条数据</span>
<span class="token keyword">call</span> batchinsertbook<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 添加索引</span>
<span class="token keyword">alter</span>  <span class="token keyword">table</span>  book  <span class="token keyword">enable</span>  <span class="token keyword">keys</span><span class="token punctuation">;</span>

<span class="token comment">-- 修改表的引擎为innodb</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> book <span class="token keyword">engine</span> <span class="token keyword">innodb</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="表的设计三范式" tabindex="-1"><a class="header-anchor" href="#表的设计三范式" aria-hidden="true">#</a> 表的设计三范式</h2><ul><li>定义：在对数据库进行设计时为了方便后期代码业务的实现，通常会在设计数据库时遵守一些规范，这些规范称之为范式。</li></ul><h3 id="第一范式" tabindex="-1"><a class="header-anchor" href="#第一范式" aria-hidden="true">#</a> 第一范式</h3><ul><li>数据表的列不可再分。</li><li>例如：下表中的选课字段可以再分为对应的学科，所以不满足第一范式</li></ul><table><thead><tr><th><strong>学号</strong></th><th><strong>姓名</strong></th><th><strong>选课</strong></th></tr></thead><tbody><tr><td>10001</td><td>张三</td><td>数学，语文，英语</td></tr><tr><td>10002</td><td>李四</td><td>语文，英语</td></tr><tr><td>10003</td><td>王五</td><td>语文，英语，历史</td></tr></tbody></table><h3 id="第二范式" tabindex="-1"><a class="header-anchor" href="#第二范式" aria-hidden="true">#</a> 第二范式</h3><ul><li>满足第一范式的前提下，并且表中非主键列不存在对主键的部分依赖。</li><li>例如：下表中，学号和课程构成联合主键，成绩同时依赖于学号和课程，但课程学分只依赖于课程(课程是主键的一部分)</li></ul><table><thead><tr><th><strong>学号</strong></th><th><strong>课程</strong></th><th><strong>成绩</strong></th><th><strong>课程学分</strong></th></tr></thead><tbody><tr><td>10001</td><td>数学</td><td>100</td><td>6</td></tr><tr><td>10001</td><td>语文</td><td>90</td><td>2</td></tr><tr><td>10001</td><td>英语</td><td>85</td><td>3</td></tr><tr><td>10002</td><td>数学</td><td>90</td><td>6</td></tr><tr><td>10003</td><td>数学</td><td>99</td><td>6</td></tr><tr><td>10004</td><td>语文</td><td>89</td><td>2</td></tr></tbody></table><ul><li>如需满足第二范式，需将表拆分： <table><thead><tr><th><strong>学号</strong></th><th><strong>课程</strong></th><th><strong>成绩</strong></th></tr></thead><tbody><tr><td>10001</td><td>数学</td><td>100</td></tr><tr><td>10001</td><td>语文</td><td>90</td></tr><tr><td>10001</td><td>英语</td><td>85</td></tr><tr><td>10002</td><td>数学</td><td>90</td></tr><tr><td>10003</td><td>数学</td><td>99</td></tr><tr><td>10004</td><td>语文</td><td>89</td></tr></tbody></table></li></ul><table><thead><tr><th><strong>课程</strong></th><th><strong>课程学分</strong></th></tr></thead><tbody><tr><td>数学</td><td>6</td></tr><tr><td>语文</td><td>3</td></tr><tr><td>英语</td><td>2</td></tr></tbody></table><h3 id="第三范式" tabindex="-1"><a class="header-anchor" href="#第三范式" aria-hidden="true">#</a> 第三范式</h3><ul><li>满足第二范式的同时，表中的列不存在对非主键列的传递依赖。</li><li>例如：下面的学生信息表，虽然满足第二范式，所有字段都依赖主键（学号），但是，表中存在一个传递依赖，(学号）-&gt;(班级）-&gt;（班主任）。也就是说，（班主任）这个非主键列依赖于另外一个非主键列 （班级）。所以不符号第三范式。</li></ul><table><thead><tr><th><strong>学号</strong></th><th><strong>姓名</strong></th><th><strong>性别</strong></th><th><strong>班级</strong></th><th><strong>班主任</strong></th></tr></thead><tbody><tr><td>10001</td><td>张三</td><td>男</td><td>一班</td><td>小王</td></tr><tr><td>10002</td><td>李四</td><td>男</td><td>一班</td><td>小王</td></tr><tr><td>10003</td><td>王五</td><td>男</td><td>二班</td><td>小李</td></tr><tr><td>10004</td><td>张小三</td><td>男</td><td>二班</td><td>小李</td></tr></tbody></table><ul><li>如需满足第三范式，需将表拆分：</li></ul><table><thead><tr><th><strong>学号</strong></th><th><strong>姓名</strong></th><th><strong>性别</strong></th><th><strong>班级</strong></th></tr></thead><tbody><tr><td>10001</td><td>张三</td><td>男</td><td>一班</td></tr><tr><td>10002</td><td>李四</td><td>男</td><td>一班</td></tr><tr><td>10003</td><td>王五</td><td>男</td><td>二班</td></tr><tr><td>10004</td><td>张小三</td><td>男</td><td>二班</td></tr></tbody></table><table><thead><tr><th><strong>班级</strong></th><th><strong>班主任</strong></th></tr></thead><tbody><tr><td>一班</td><td>小王</td></tr><tr><td>二班</td><td>小李</td></tr></tbody></table>`,37);function D(S,Q){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("table",null,[d,n("tbody",null,[k,r,m,v,n("tr",null,[n("td",null,[s("select * from zhangsan inner join lisi on "),n("a",b,[s("zhangsan.name"),t(a)]),s(" = "),n("a",y,[s("lisi.name"),t(a)]),s(";")]),w]),h,g,f,_,x,q])]),L])}const E=p(i,[["render",D],["__file","day02 MySql语法.html.vue"]]);export{E as default};
