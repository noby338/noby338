import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as e,e as a}from"./app.759ff6f5.js";const o={},c=a('<h3 id="mvc" tabindex="-1"><a class="header-anchor" href="#mvc" aria-hidden="true">#</a> MVC</h3><ul><li>程序的一种设计模式</li><li>M：Model，业务模型，处理业务 <ul><li>数据承载Bean：是指实体类，专门承载业务数据的，如Student、User等。</li><li>业务处理Bean：专门用于处理用户提交请求的。 <ul><li>service对象</li><li>dao对象</li></ul></li></ul></li><li>V：View，视图，界面展示 <ul><li>为用户提供使用界面，与用户直接进行交互。</li></ul></li><li>C：Controller，控制器，处理请求，调用模型和视图 <ul><li>用于将用户请求转发给相应的Model进行处理，并处理Model的计算结果向用户提供相应响应。</li></ul></li></ul><h3 id="三层架构" tabindex="-1"><a class="header-anchor" href="#三层架构" aria-hidden="true">#</a> 三层架构</h3><ul><li>是程序设计的一种典型架构方式</li><li>表现层(View)： <code>com.itheima.controller</code> 或者 <code>com.itheima.web</code><ul><li>用于接收用户提交请求的代码在这里编写。</li></ul></li><li>业务层(Service、业务逻辑层)：<code>com.itheima.service</code><ul><li>系统的业务逻辑主要在这里编写。</li></ul></li><li>数据层(Dao、持久层、数据访问层)：<code>com.itheima.dao</code> 或者 <code>com.itheima.mapper</code><ul><li>直接操作数据库的代码在这里编写。</li></ul></li></ul><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20221001153941436.png" alt="image-20221001153941436"></p><h3 id="mvc和三层架构的关系" tabindex="-1"><a class="header-anchor" href="#mvc和三层架构的关系" aria-hidden="true">#</a> MVC和三层架构的关系</h3><ul><li>这两种系统架构的出现，即使应用程序达到”高内聚，低耦合“的目的。三层架构是程序设计的一种典型架构方式，强调的是层与层之间的上下关系，从上到下依次为表现层、业务逻辑层、数据访问层，在最上层的表现层收到请求时，表现层调用业务逻辑层的方法，业务逻辑层调用数据访问层实现数据的操作，再将数据返回至业务逻辑层，业务逻辑层将数据返回给表现层，最终将数据以视图的方式响应给用户；而MVC是程序的一种设计模式，强调的是相互协作的关系，在model、view、controller中，controller作为view和model和view的协调者，这里的view和controller对应三层架构中的表现层，而model对应三层架构的业务逻辑层和数据访问层。MVC是针对用户界面设计的，而三层架构可以用于任何类型的应用程序。三层架构强调数据的层次化组织和管理，而MVC强调模型、视图和控制器之间的交互。 MVC与三层架构虽然说实质是不同的，但在所达到”高内聚，低耦合“的目的相同。</li></ul><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/image-20220325121456970.png" alt="image-20220325121456970"></p><h3 id="ssm与三层架构的关系" tabindex="-1"><a class="header-anchor" href="#ssm与三层架构的关系" aria-hidden="true">#</a> SSM与三层架构的关系</h3><ul><li>SSM即SpringMVC、Spring、Mybatis三个框架。它们在三层架构中所处的位置是不同的，即它们在三层架构中的功能各不相同，各司其职。 <ul><li>SpringMVC：作为View层的实现者，完成用户的请求接收功能。SpringMVC的Controller作为整个应用的控制器，完成用户请求的转发及对用户的响应。</li><li>MyBatis：作为 Dao层的实现者，完成对数据库的增、删、改、查功能。</li><li>Spring：以整个应用大管家的身份出现。整个应用中所有的Bean的生命周期行为，均由Spring来管理。即整个应用中所有对象的创建、初始化、销毁，及对象间关联关系的维护，均由Spring进行管理。</li></ul></li></ul><p><img src="https://markdown-1308523627.cos.ap-chengdu.myqcloud.com/typora/6795acbfc2ca254b6bc069c2b80a7f8b~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p>',11),r=[c];function t(d,n){return l(),e("div",null,r)}const h=i(o,[["render",t],["__file","day11 MVC及三层架构.html.vue"]]);export{h as default};
