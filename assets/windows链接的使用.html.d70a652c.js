import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as e,e as l}from"./app.759ff6f5.js";const i={},u=l('<h2 id="链接的使用" tabindex="-1"><a class="header-anchor" href="#链接的使用" aria-hidden="true">#</a> 链接的使用</h2><ul><li><p>dir：查看路径下的目录、文件、链接</p></li><li><p>hard link（硬链接）：不可跨分区，只可作用于文件</p><ul><li><p>eg: <code>mklink /h &quot;D:\\null\\text4.txt&quot; &quot;D:\\null\\text3.txt&quot;</code></p><ul><li>新建文件text4.txt为文件text3.txt的硬链接</li></ul></li></ul></li><li><p>junction point（directory hard link）（软链接）：可跨分区，只可作用于目录，只能使用绝对路径。即使创建junction point时使用了相对路径，保存到NTFS中时将隐式转换成绝对路径。（linux中没有该类链接）</p><ul><li><p>eg: <code>mklink /j &quot;D:\\null\\B&quot; &quot;D:\\null\\A&quot; </code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\javase&quot; &quot;D:\\markdown\\javaSE&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\linux&quot; &quot;D:\\markdown\\linux&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\windows&quot; &quot;D:\\markdown\\windows&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\sql&quot; &quot;D:\\markdown\\sql&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\git&quot; &quot;D:\\markdown\\git&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\web&quot; &quot;D:\\markdown\\web&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\javaWeb&quot; &quot;D:\\markdown\\javaWeb&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\spring&quot; &quot;D:\\markdown\\spring&quot;</code></p></li><li><p>eg: <code>mklink /j &quot;D:\\VSCodeProjects\\noby\\src\\codenotes\\distributed&quot; &quot;D:\\markdown\\distributed&quot;</code></p><ul><li>新建目录B为为目录A的软链接</li></ul></li></ul></li><li><p>symbolic link（符号链接）：可跨分区，可作用于目录和文件，可使用相对路径和绝对路径</p><ul><li><p>eg: <code>mklink /d &quot;D:\\null\\D&quot; &quot;D:\\null\\C&quot; </code></p><ul><li>新建目录D为为目录C的符号链接</li></ul></li><li><p>eg: <code>mklink &quot;D:\\null\\C\\text2.txt&quot; &quot;D:\\null\\A\\text.txt&quot; </code></p><ul><li>新建文件text2.txt为文件text.txt的符号链接</li></ul></li></ul></li></ul>',2),n=[u];function d(c,r){return t(),e("div",null,n)}const p=o(i,[["render",d],["__file","windows链接的使用.html.vue"]]);export{p as default};
